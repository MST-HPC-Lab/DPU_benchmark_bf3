// MODIFIED BY Nathan Tibbetts, September 2024

// ORIGINAL LICENSE:

// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option java_multiple_files = true;
option java_package = "edu.mst.puri.bluefield_spatial";
option java_outer_classname = "BluefieldSpatialProto";
option objc_class_prefix = "BFS";

package bluefield_spatial;

// The spatial operations service definition.
service SpatialOp {
  // Sends a join request
  rpc SayMessage (SimpleRequest) returns (SimpleReply) {}
  rpc SayJoin (OpRequest) returns (stream GeomReply) {}
  rpc SayQuery (stream GeomRequest) returns (stream GeomReply) {}
  // Extra communications for between the filter server and the refine server:
  rpc FilteredJoin (stream IndexedRequest) returns (stream IndexedReply) {}
  rpc FilteredQuery (stream GeomRequest) returns (stream IndexedReply) {}
}

// A request message containing only a string
message SimpleRequest {
  int32 operation = 1; // Class of operation to be performed
}

// A response message containing only a string
message SimpleReply {
  string message = 1; // Response message
}

// A single Polygon
//  (For internal use, as part of other messages - generally streamed)
message Polygon {
  int32 id = 4;
  repeated float coord = 1 [packed=true];
}

// A command, or a header message before a geometry stream
//  Contains an operation to do, and the names of the datasets to do it on
message OpRequest { // Sent before a group of Polygons
  optional string operation = 1;  // Name of operation to be performed
  optional string message = 2;    // Can be used to specify operand order
  optional string name = 3;       // A name for the dataset we're about to send; it can store it under this name
  repeated string compare_to = 4; // Additional operand datasets
}

// A single instance of a streamed message, containing either the command header
//  or a single Polygon
message GeomRequest {
  oneof poly_request_part {
    OpRequest header = 1;
    Polygon poly = 2;
    string message = 3; // mid-stream message option
  }
}

// A response, or a header message before a response geometry stream
message OpResponse {
  optional string message = 1;
  optional float filter_time = 2; // How much time the filter step took
  optional float refine_time = 3; // How much time the refine step took
  optional float communication_time = 4; // How much time the communication took
}

// A single instance of a streamed response, containing either a Polygon or a trailer
message GeomReply {
  oneof poly_response_part {
    string message = 1; // mid-stream message option
    Polygon poly = 2;
    OpResponse trailer = 3;
  }
}

// A group of polygon IDs
//  (For internal use, as part of other messages - generally streamed)
message IDs {
  repeated int32 id = 1 [packed=true];
}

// A single instance of a streamed request message, header or group of shape IDs,
//  for use between the filter and refine servers
message IndexedRequest {
  oneof id_request_part {
    OpRequest header = 1;
    IDs ids = 2;
    string message = 3; // mid-stream message option
  }
}

// A single instance of a streamed response message, IDs or trailer,
//  for use between the filter and refine servers
message IndexedReply {
  oneof id_response_part {
    IDs ids = 1;
    string message = 2; // mid-stream message option
    OpResponse trailer = 3;
  }
}