// MODIFIED BY Nathan Tibbetts, September 2024

// ORIGINAL LICENSE:

// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option java_multiple_files = true;
option java_package = "edu.mst.puri.bluefield_spatial";
option java_outer_classname = "BluefieldSpatialProto";
option objc_class_prefix = "BFS";

package bluefield_spatial;

// The spatial operations service definition.
service SpatialOp {
  // Sends a join request
  rpc SayMessage (SimpleRequest) returns (SimpleReply) {}
  rpc SayJoin (CommandRequest) returns (GeomReply) {}
  rpc SayQuery (GeomRequest) returns (GeomReply) {}
}

// A request message containing only a string
message SimpleRequest {
  string operation = 1; // Name of operation to be performed
}

// A response message containing only a string
message SimpleReply {
  string message = 1; // Response message
}

// A request message containing a command: an operation to do, and the names
//  of the datasets to do it on
message CommandRequest {
  string operation = 1;            // Name of operation to be performed
  repeated string dataSetName = 2; // Operands from server's data sets
  optional string resultName = 3;  // Add a name to get it to store the result
}

// A collection of polygons
//  (For internal use, as part of other messages)
message Geoms {
  message Polygon {
    repeated float coord = 1 [packed=true];
  }
  optional string name = 2;
  map<int32, Polygon> index = 3;
}

// A request message containing a command, a group of geometries, and the names
//  of internal datasets to compare it against
message GeomRequest {
  string operation = 1;            // Name of operation to be performed
  Geoms geom = 2;                  // Client-sent first operand
  repeated string dataSetName = 3; // Additional operands from server's data sets
  optional string resultName = 4;  // Add a name to get it to store the result
}

// A response message containing GEOS geometries in float form
message GeomReply {
  string message = 1; // Response message
  Geoms geom = 2;     // Geometries resulting from a requested operation
}
